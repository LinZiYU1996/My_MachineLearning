# -*- coding: utf-8 -*-

# @Time  : 2019/11/30 16:16

# @Author : Mr.Lin


import  numpy as np
"""
通用解决函数
"""



"""
判别函数，检查所有数据是否已经分类完成
"""
def Judge(X,y,w):

    n = X.shape[0]

    # 判断是否同号
    num = np.sum(X.dot(w)*y>0)

    return n == num



"""
    生成N个d维点,x1+...+xd>=t的点标记为+1，x1+...+xd<=-t的点标记为-1，
	rnd为随机数生成器，形式为rnd = np.random.RandomState(seed)，seed为随机种子
"""
def data(N,d,rnd,t=0.1):
    X = []
    w = np.ones(d)
    print("w : \n",w)
    print("")
    print("")
    while (len(X) < N):
        x = rnd.uniform(-1, 1, size=(d))
        if np.abs(x.dot(w)) >= t:
            X.append(x)

    X = np.array(X)
    print("X : \n",X)
    print("")
    print("")
    y = 2 * (X.dot(w) > 0) - 1
    print("y : \n",y)
    print("")
    print("")
    # 添加第一个分量为1
    X = np.c_[np.ones((N, 1)), X]
    print(X)
    print("")
    print("")

    print("X[1, :]  \n",X[1, :])
    return X, y
# 测试结果集：

# w :
#  [ 1.  1.]
#
#
# X :
#  [[-0.25091976  0.90142861]
#  [ 0.46398788  0.19731697]
#  [-0.68796272 -0.68801096]
#  [-0.88383278  0.73235229]
#  [ 0.20223002  0.41614516]
#  [-0.63635007 -0.63319098]
#  [-0.39151551  0.04951286]
#  [-0.13610996 -0.41754172]
#  [ 0.22370579 -0.72101228]
#  [-0.4157107  -0.26727631]
#  [-0.08786003  0.57035192]
#  [-0.60065244  0.02846888]
#  [ 0.18482914 -0.90709917]
#  [ 0.2150897  -0.65895175]
#  [ 0.93126407  0.6167947 ]
#  [-0.39077246 -0.80465577]
#  [ 0.36846605 -0.11969501]
#  [-0.75592353 -0.00964618]
#  [-0.93122296  0.8186408 ]
#  [-0.48244004  0.32504457]]
#
#
# y :
#  [ 1  1 -1 -1  1 -1 -1 -1 -1 -1  1 -1 -1 -1  1 -1  1 -1 -1 -1]
#
#
# [[ 1.         -0.25091976  0.90142861]
#  [ 1.          0.46398788  0.19731697]
#  [ 1.         -0.68796272 -0.68801096]
#  [ 1.         -0.88383278  0.73235229]
#  [ 1.          0.20223002  0.41614516]
#  [ 1.         -0.63635007 -0.63319098]
#  [ 1.         -0.39151551  0.04951286]
#  [ 1.         -0.13610996 -0.41754172]
#  [ 1.          0.22370579 -0.72101228]
#  [ 1.         -0.4157107  -0.26727631]
#  [ 1.         -0.08786003  0.57035192]
#  [ 1.         -0.60065244  0.02846888]
#  [ 1.          0.18482914 -0.90709917]
#  [ 1.          0.2150897  -0.65895175]
#  [ 1.          0.93126407  0.6167947 ]
#  [ 1.         -0.39077246 -0.80465577]
#  [ 1.          0.36846605 -0.11969501]
#  [ 1.         -0.75592353 -0.00964618]
#  [ 1.         -0.93122296  0.8186408 ]
#  [ 1.         -0.48244004  0.32504457]]

































